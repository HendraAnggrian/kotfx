$dokka.format:html
$dokka.linkExtension:html
$dokka.location:ktfx.jfoenix$columns(com.jfoenix.controls.JFXTreeTableView((ktfx.jfoenix.columns.S)), kotlin.Function1((ktfx.jfoenix.JFXTreeTableColumnsBuilder((ktfx.jfoenix.columns.S)), kotlin.Unit)))ktfx.jfoenix/com.jfoenix.controls.-j-f-x-tree-table-view/columns.html
$dokka.location:ktfx.jfoenix$delayedEventHandler(javafx.scene.Node, javafx.util.Duration, javafx.event.EventType((ktfx.jfoenix.delayedEventHandler.T)), kotlin.Function1((ktfx.jfoenix.delayedEventHandler.T, kotlin.Unit)))ktfx.jfoenix/javafx.scene.-node/delayed-event-handler.html
$dokka.location:ktfx.jfoenix$delayedPropertyInvalidationListener(javafx.beans.value.ObservableValue((ktfx.jfoenix.delayedPropertyInvalidationListener.T)), javafx.util.Duration, kotlin.Function1((ktfx.jfoenix.delayedPropertyInvalidationListener.T, kotlin.Unit)))ktfx.jfoenix/javafx.beans.value.-observable-value/delayed-property-invalidation-listener.html
$dokka.location:ktfx.jfoenix$delayedPropertyInvalidationListener(javafx.beans.value.ObservableValue((ktfx.jfoenix.delayedPropertyInvalidationListener.T)), javafx.util.Duration, kotlin.Function1((ktfx.jfoenix.delayedPropertyInvalidationListener.T, kotlin.Unit)), kotlin.Function1((ktfx.jfoenix.delayedPropertyInvalidationListener.T, kotlin.Unit)))ktfx.jfoenix/javafx.beans.value.-observable-value/delayed-property-invalidation-listener.html
$dokka.location:ktfx.jfoenix$jfxBadge(ktfx.layouts.NodeInvokable, kotlin.Function1((ktfx.jfoenix._JFXBadge, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-badge.html
$dokka.location:ktfx.jfoenix$jfxButton(ktfx.layouts.NodeInvokable, kotlin.String, javafx.scene.Node, kotlin.Function1((com.jfoenix.controls.JFXButton, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-button.html
$dokka.location:ktfx.jfoenix$jfxCheckBox(ktfx.layouts.NodeInvokable, kotlin.String, kotlin.Function1((com.jfoenix.controls.JFXCheckBox, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-check-box.html
$dokka.location:ktfx.jfoenix$jfxChip(ktfx.layouts.NodeInvokable, com.jfoenix.controls.JFXChipView((ktfx.jfoenix.jfxChip.T)), ktfx.jfoenix.jfxChip.T, kotlin.Function1((com.jfoenix.controls.JFXChip((ktfx.jfoenix.jfxChip.T)), kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-chip.html
$dokka.location:ktfx.jfoenix$jfxChipView(ktfx.layouts.NodeInvokable, kotlin.Function1((com.jfoenix.controls.JFXChipView((ktfx.jfoenix.jfxChipView.T)), kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-chip-view.html
$dokka.location:ktfx.jfoenix$jfxClippedPane(ktfx.layouts.NodeInvokable, kotlin.Function1((ktfx.jfoenix._JFXClippedPane, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-clipped-pane.html
$dokka.location:ktfx.jfoenix$jfxColorPicker(ktfx.layouts.NodeInvokable, javafx.scene.paint.Color, kotlin.Function1((com.jfoenix.controls.JFXColorPicker, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-color-picker.html
$dokka.location:ktfx.jfoenix$jfxComboBox(ktfx.layouts.NodeInvokable, javafx.collections.ObservableList((ktfx.jfoenix.jfxComboBox.T)), kotlin.Function1((com.jfoenix.controls.JFXComboBox((ktfx.jfoenix.jfxComboBox.T)), kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-combo-box.html
$dokka.location:ktfx.jfoenix$jfxDatePicker(ktfx.layouts.NodeInvokable, java.time.LocalDate, kotlin.Function1((com.jfoenix.controls.JFXDatePicker, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-date-picker.html
$dokka.location:ktfx.jfoenix$jfxDecorator(ktfx.layouts.NodeInvokable, javafx.stage.Stage, javafx.scene.Node, kotlin.Boolean, kotlin.Boolean, kotlin.Boolean, kotlin.Function1((com.jfoenix.controls.JFXDecorator, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-decorator.html
$dokka.location:ktfx.jfoenix$jfxDefaultChip(ktfx.layouts.NodeInvokable, com.jfoenix.controls.JFXChipView((ktfx.jfoenix.jfxDefaultChip.T)), ktfx.jfoenix.jfxDefaultChip.T, kotlin.Function1((com.jfoenix.controls.JFXDefaultChip((ktfx.jfoenix.jfxDefaultChip.T)), kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-default-chip.html
$dokka.location:ktfx.jfoenix$jfxDrawer(ktfx.layouts.NodeInvokable, kotlin.Function1((com.jfoenix.controls.JFXDrawer, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-drawer.html
$dokka.location:ktfx.jfoenix$jfxDrawersStack(ktfx.layouts.NodeInvokable, kotlin.Function1((com.jfoenix.controls.JFXDrawersStack, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-drawers-stack.html
$dokka.location:ktfx.jfoenix$jfxHamburger(ktfx.layouts.NodeInvokable, kotlin.Function1((com.jfoenix.controls.JFXHamburger, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-hamburger.html
$dokka.location:ktfx.jfoenix$jfxIndefiniteSnackbar(javafx.scene.layout.Pane, kotlin.String)ktfx.jfoenix/javafx.scene.layout.-pane/jfx-indefinite-snackbar.html
$dokka.location:ktfx.jfoenix$jfxIndefiniteSnackbar(javafx.scene.layout.Pane, kotlin.String, kotlin.String, kotlin.Function1((javafx.event.ActionEvent, kotlin.Unit)))ktfx.jfoenix/javafx.scene.layout.-pane/jfx-indefinite-snackbar.html
$dokka.location:ktfx.jfoenix$jfxListCell(ktfx.layouts.NodeInvokable, kotlin.Function1((com.jfoenix.controls.JFXListCell((ktfx.jfoenix.jfxListCell.T)), kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-list-cell.html
$dokka.location:ktfx.jfoenix$jfxListView(ktfx.layouts.NodeInvokable, kotlin.Function1((com.jfoenix.controls.JFXListView((ktfx.jfoenix.jfxListView.T)), kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-list-view.html
$dokka.location:ktfx.jfoenix$jfxMasonryPane(ktfx.layouts.NodeInvokable, kotlin.Function1((com.jfoenix.controls.JFXMasonryPane, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-masonry-pane.html
$dokka.location:ktfx.jfoenix$jfxNodesList(ktfx.layouts.NodeInvokable, kotlin.Function1((com.jfoenix.controls.JFXNodesList, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-nodes-list.html
$dokka.location:ktfx.jfoenix$jfxPasswordField(ktfx.layouts.NodeInvokable, kotlin.Function1((com.jfoenix.controls.JFXPasswordField, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-password-field.html
$dokka.location:ktfx.jfoenix$jfxProgressBar(ktfx.layouts.NodeInvokable, kotlin.Double, kotlin.Function1((com.jfoenix.controls.JFXProgressBar, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-progress-bar.html
$dokka.location:ktfx.jfoenix$jfxRadioButton(ktfx.layouts.NodeInvokable, kotlin.String, kotlin.Function1((com.jfoenix.controls.JFXRadioButton, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-radio-button.html
$dokka.location:ktfx.jfoenix$jfxRippler(ktfx.layouts.NodeInvokable, kotlin.Function1((ktfx.jfoenix._JFXRippler, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-rippler.html
$dokka.location:ktfx.jfoenix$jfxScrollPane(ktfx.layouts.NodeInvokable, kotlin.Function1((ktfx.jfoenix._JFXScrollPane, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-scroll-pane.html
$dokka.location:ktfx.jfoenix$jfxSlider(ktfx.layouts.NodeInvokable, kotlin.Double, kotlin.Double, kotlin.Double, kotlin.Function1((com.jfoenix.controls.JFXSlider, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-slider.html
$dokka.location:ktfx.jfoenix$jfxSnackbar(javafx.scene.layout.Pane, kotlin.String, kotlin.Long)ktfx.jfoenix/javafx.scene.layout.-pane/jfx-snackbar.html
$dokka.location:ktfx.jfoenix$jfxSnackbar(javafx.scene.layout.Pane, kotlin.String, kotlin.Long, kotlin.String, kotlin.Function1((javafx.event.ActionEvent, kotlin.Unit)))ktfx.jfoenix/javafx.scene.layout.-pane/jfx-snackbar.html
$dokka.location:ktfx.jfoenix$jfxSpinner(ktfx.layouts.NodeInvokable, kotlin.Double, kotlin.Function1((com.jfoenix.controls.JFXSpinner, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-spinner.html
$dokka.location:ktfx.jfoenix$jfxTabPane(ktfx.layouts.NodeInvokable, kotlin.Function1((ktfx.jfoenix._JFXTabPane, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-tab-pane.html
$dokka.location:ktfx.jfoenix$jfxTextArea(ktfx.layouts.NodeInvokable, kotlin.String, kotlin.Function1((com.jfoenix.controls.JFXTextArea, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-text-area.html
$dokka.location:ktfx.jfoenix$jfxTextField(ktfx.layouts.NodeInvokable, kotlin.String, kotlin.Function1((com.jfoenix.controls.JFXTextField, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-text-field.html
$dokka.location:ktfx.jfoenix$jfxTimePicker(ktfx.layouts.NodeInvokable, java.time.LocalTime, kotlin.Function1((com.jfoenix.controls.JFXTimePicker, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-time-picker.html
$dokka.location:ktfx.jfoenix$jfxToggleButton(ktfx.layouts.NodeInvokable, kotlin.Function1((com.jfoenix.controls.JFXToggleButton, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-toggle-button.html
$dokka.location:ktfx.jfoenix$jfxToggleNode(ktfx.layouts.NodeInvokable, javafx.scene.Node, kotlin.Function1((com.jfoenix.controls.JFXToggleNode, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-toggle-node.html
$dokka.location:ktfx.jfoenix$jfxTogglePane(ktfx.layouts.NodeInvokable, kotlin.Function1((com.jfoenix.controls.JFXTogglePane, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-toggle-pane.html
$dokka.location:ktfx.jfoenix$jfxToolbar(ktfx.layouts.NodeInvokable, kotlin.Function1((ktfx.jfoenix._JFXToolbar, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-toolbar.html
$dokka.location:ktfx.jfoenix$jfxTreeCell(ktfx.layouts.NodeInvokable, kotlin.Function1((com.jfoenix.controls.JFXTreeCell((ktfx.jfoenix.jfxTreeCell.T)), kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-tree-cell.html
$dokka.location:ktfx.jfoenix$jfxTreeTableView(ktfx.layouts.NodeInvokable, javafx.scene.control.TreeItem((ktfx.jfoenix.jfxTreeTableView.S)), kotlin.Function1((com.jfoenix.controls.JFXTreeTableView((ktfx.jfoenix.jfxTreeTableView.S)), kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-tree-table-view.html
$dokka.location:ktfx.jfoenix$jfxTreeView(ktfx.layouts.NodeInvokable, javafx.scene.control.TreeItem((ktfx.jfoenix.jfxTreeView.T)), kotlin.Function1((com.jfoenix.controls.JFXTreeView((ktfx.jfoenix.jfxTreeView.T)), kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-tree-view.html
$dokka.location:ktfx.jfoenix$jfxTreeViewPath(ktfx.layouts.NodeInvokable, javafx.scene.control.TreeView((kotlin.Any)), kotlin.Function1((com.jfoenix.controls.JFXTreeViewPath, kotlin.Unit)))ktfx.jfoenix/ktfx.layouts.-node-invokable/jfx-tree-view-path.html
$dokka.location:ktfx.jfoenix$onDialogClosed(com.jfoenix.controls.JFXDialog, kotlin.coroutines.CoroutineContext, kotlin.SuspendFunction2((kotlinx.coroutines.CoroutineScope, com.jfoenix.controls.events.JFXDialogEvent, kotlin.Unit)))ktfx.jfoenix/com.jfoenix.controls.-j-f-x-dialog/on-dialog-closed.html
$dokka.location:ktfx.jfoenix$onDialogOpened(com.jfoenix.controls.JFXDialog, kotlin.coroutines.CoroutineContext, kotlin.SuspendFunction2((kotlinx.coroutines.CoroutineScope, com.jfoenix.controls.events.JFXDialogEvent, kotlin.Unit)))ktfx.jfoenix/com.jfoenix.controls.-j-f-x-dialog/on-dialog-opened.html
$dokka.location:ktfx.jfoenix$onDrawerClosed(com.jfoenix.controls.JFXDrawer, kotlin.coroutines.CoroutineContext, kotlin.SuspendFunction2((kotlinx.coroutines.CoroutineScope, com.jfoenix.controls.events.JFXDrawerEvent, kotlin.Unit)))ktfx.jfoenix/com.jfoenix.controls.-j-f-x-drawer/on-drawer-closed.html
$dokka.location:ktfx.jfoenix$onDrawerClosing(com.jfoenix.controls.JFXDrawer, kotlin.coroutines.CoroutineContext, kotlin.SuspendFunction2((kotlinx.coroutines.CoroutineScope, com.jfoenix.controls.events.JFXDrawerEvent, kotlin.Unit)))ktfx.jfoenix/com.jfoenix.controls.-j-f-x-drawer/on-drawer-closing.html
$dokka.location:ktfx.jfoenix$onDrawerOpened(com.jfoenix.controls.JFXDrawer, kotlin.coroutines.CoroutineContext, kotlin.SuspendFunction2((kotlinx.coroutines.CoroutineScope, com.jfoenix.controls.events.JFXDrawerEvent, kotlin.Unit)))ktfx.jfoenix/com.jfoenix.controls.-j-f-x-drawer/on-drawer-opened.html
$dokka.location:ktfx.jfoenix$onDrawerOpening(com.jfoenix.controls.JFXDrawer, kotlin.coroutines.CoroutineContext, kotlin.SuspendFunction2((kotlinx.coroutines.CoroutineScope, com.jfoenix.controls.events.JFXDrawerEvent, kotlin.Unit)))ktfx.jfoenix/com.jfoenix.controls.-j-f-x-drawer/on-drawer-opening.html
$dokka.location:ktfx.jfoenix$pressAndHoldFilter(javafx.scene.Node, javafx.util.Duration, kotlin.Function1((javafx.scene.input.MouseEvent, kotlin.Unit)))ktfx.jfoenix/javafx.scene.-node/press-and-hold-filter.html
$dokka.location:ktfx.jfoenix$pressAndHoldHandler(javafx.scene.Node, javafx.util.Duration, kotlin.Function1((javafx.scene.input.MouseEvent, kotlin.Unit)))ktfx.jfoenix/javafx.scene.-node/press-and-hold-handler.html
$dokka.location:ktfx.jfoenix$show(com.jfoenix.controls.JFXSnackbar, kotlin.String, kotlin.Long, kotlin.String, kotlin.Function1((javafx.event.ActionEvent, kotlin.Unit)))ktfx.jfoenix/com.jfoenix.controls.-j-f-x-snackbar/show.html
$dokka.location:ktfx.jfoenix$showIndefinite(com.jfoenix.controls.JFXSnackbar, kotlin.String)ktfx.jfoenix/com.jfoenix.controls.-j-f-x-snackbar/show-indefinite.html
$dokka.location:ktfx.jfoenix$showIndefinite(com.jfoenix.controls.JFXSnackbar, kotlin.String, kotlin.String, kotlin.Function1((javafx.event.ActionEvent, kotlin.Unit)))ktfx.jfoenix/com.jfoenix.controls.-j-f-x-snackbar/show-indefinite.html
$dokka.location:ktfx.jfoenix$toHex(javafx.scene.paint.Color)ktfx.jfoenix/javafx.scene.paint.-color/to-hex.html
$dokka.location:ktfx.jfoenix$updateBackground(javafx.scene.layout.Region, javafx.scene.layout.Background, javafx.scene.paint.Paint)ktfx.jfoenix/javafx.scene.layout.-region/update-background.html
ktfx.jfoenix
